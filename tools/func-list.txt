RETURN_CODE EXPORT AlazarGetOEMFPGAName(int opcodeID, char *FullPath, unsigned long *error);
RETURN_CODE EXPORT AlazarOEMSetWorkingDirectory(char *wDir, unsigned long *error);
RETURN_CODE EXPORT AlazarOEMGetWorkingDirectory(char *wDir, unsigned long *error);
RETURN_CODE EXPORT AlazarParseFPGAName(const char *FullName, char *Name, U32 *Type, U32 *MemSize, U32 *MajVer, U32 *MinVer, U32 *MajRev, U32 *MinRev, U32 *error);
RETURN_CODE EXPORT AlazarDownLoadFPGA(HANDLE handle, char *FileName, U32 *RetValue);
RETURN_CODE EXPORT AlazarOEMDownLoadFPGA(HANDLE handle, char *FileName, U32 *RetValue);
RETURN_CODE EXPORT AlazarReadWriteTest(HANDLE handle, U32 *Buffer, U32 SizeToWrite, U32 SizeToRead);
RETURN_CODE EXPORT AlazarMemoryTest(HANDLE handle, U32 *errors);
RETURN_CODE EXPORT AlazarBusyFlag(HANDLE handle, int *BusyFlag);
RETURN_CODE EXPORT AlazarTriggeredFlag(HANDLE handle, int *TriggeredFlag);
RETURN_CODE EXPORT AlazarGetSDKVersion(U8 *major, U8 *minor, U8 *revision);
RETURN_CODE EXPORT AlazarGetDriverVersion(U8 *major, U8 *minor, U8 *revision);
RETURN_CODE EXPORT AlazarGetBoardRevision(HANDLE handle, U8 *major, U8 *minor);
U32 EXPORT AlazarBoardsFound(void);
HANDLE EXPORT AlazarOpen(char *boardName);
void EXPORT AlazarClose(HANDLE handle);
U32 EXPORT AlazarGetBoardKind(HANDLE handle);
RETURN_CODE EXPORT AlazarGetCPLDVersion(HANDLE handle, U8 *major, U8 *minor);
RETURN_CODE EXPORT AlazarAutoCalibrate(HANDLE handle);
RETURN_CODE EXPORT AlazarGetChannelInfo(HANDLE handle, U32 *memorySize, U8 *bitsPerSample);
RETURN_CODE EXPORT AlazarGetChannelInfoEx(HANDLE handle, S64 *memorySize, U8 *bitsPerSample);
RETURN_CODE EXPORT AlazarInputControl(HANDLE handle, U8 channel, U32 coupling, U32 inputRange, U32 impedance);
RETURN_CODE EXPORT AlazarInputControlEx(HANDLE handle, U32 channel, U32 couplingId, U32 rangeId, U32 impedenceId);
RETURN_CODE EXPORT AlazarSetPosition(HANDLE handle, U8 Channel, int PMPercent, U32 InputRange);
RETURN_CODE EXPORT AlazarSetExternalTrigger(HANDLE handle, U32 couplingId, U32 rangeId);
RETURN_CODE EXPORT AlazarSetTriggerDelay(HANDLE handle, U32 Delay);
RETURN_CODE EXPORT AlazarSetTriggerTimeOut(HANDLE handle, U32 timeout_ticks);
U32 EXPORT AlazarTriggerTimedOut(HANDLE h);
RETURN_CODE EXPORT AlazarGetTriggerAddress(HANDLE handle, U32 Record, U32 *TriggerAddress, U32 *TimeStampHighPart, U32 *TimeStampLowPart);
RETURN_CODE EXPORT AlazarSetTriggerOperation(HANDLE handle, U32 TriggerOperation, U32 TriggerEngine1, U32 Source1, U32 Slope1, U32 Level1, U32 TriggerEngine2, U32 Source2, U32 Slope2, U32 Level2);
RETURN_CODE EXPORT AlazarGetTriggerTimestamp(HANDLE handle, U32 Record, U64 *Timestamp_samples);
RETURN_CODE EXPORT AlazarSetTriggerOperationForScanning(HANDLE handle, U32 slopeId, U32 level, U32 options);
RETURN_CODE EXPORT AlazarAbortCapture(HANDLE handle);
RETURN_CODE EXPORT AlazarForceTrigger(HANDLE handle);
RETURN_CODE EXPORT AlazarForceTriggerEnable(HANDLE handle);
RETURN_CODE EXPORT AlazarStartCapture(HANDLE handle);
RETURN_CODE EXPORT AlazarCaptureMode(HANDLE handle, U32 Mode);
RETURN_CODE EXPORT AlazarStreamCapture(HANDLE handle, void *Buffer, U32 BufferSize, U32 DeviceOption, U32 ChannelSelect, U32 *error);
RETURN_CODE EXPORT AlazarHyperDisp(HANDLE handle, void *buffer, U32 bufferSize, U8 *viewBuffer, U32 viewBufferSize, U32 numOfPixels, U32 option, U32 channelSelect, U32 record, long transferOffset, U32 *error);
RETURN_CODE EXPORT AlazarFastPRRCapture(HANDLE handle, void *Buffer, U32 BufferSize, U32 DeviceOption, U32 ChannelSelect, U32 *error);
U32 EXPORT AlazarBusy(HANDLE handle);
U32 EXPORT AlazarTriggered(HANDLE handle);
U32 EXPORT AlazarGetStatus(HANDLE handle);
U32 EXPORT AlazarDetectMultipleRecord(HANDLE handle);
RETURN_CODE EXPORT AlazarSetRecordCount(HANDLE handle, U32 Count);
RETURN_CODE EXPORT AlazarSetRecordSize(HANDLE handle, U32 preTriggerSamples, U32 postTriggerSamples);
RETURN_CODE EXPORT AlazarSetCaptureClock(HANDLE handle, U32 source, U32 sampleRateIdOrValue, U32 edgeId, U32 decimation);
RETURN_CODE EXPORT AlazarSetExternalClockLevel(HANDLE handle, float level_percent);
RETURN_CODE EXPORT AlazarSetClockSwitchOver(HANDLE handleBoard, U32 uMode, U32 uDummyClockOnTime_ns, U32 uReserved);
U32 EXPORT AlazarRead(HANDLE handle, U32 channelId, void *buffer, int elementSize, long record, long transferOffset, U32 transferLength);
U32 EXPORT AlazarReadEx(HANDLE handle, U32 channelId, void *buffer, int elementSize, long record, INT64 transferOffset, U32 transferLength);
RETURN_CODE EXPORT AlazarSetParameter(HANDLE handle, U8 channel, U32 parameter, long value);
RETURN_CODE EXPORT AlazarSetParameterUL(HANDLE handle, U8 channel, U32 parameter, U32 value);
RETURN_CODE EXPORT AlazarSetParameterLL(HANDLE handle, U8 channel, U32 parameter, S64 value);
RETURN_CODE EXPORT AlazarGetParameter(HANDLE handle, U8 channel, U32 parameter, long *retValue);
RETURN_CODE EXPORT AlazarGetParameterUL(HANDLE handle, U8 channel, U32 parameter, U32 *retValue);
RETURN_CODE EXPORT AlazarGetParameterLL(HANDLE handle, U8 channel, U32 parameter, S64 *retValue);
HANDLE EXPORT AlazarGetSystemHandle(U32 systemId);
U32 EXPORT AlazarNumOfSystems(void);
U32 EXPORT AlazarBoardsInSystemBySystemID(U32 systemId);
U32 EXPORT AlazarBoardsInSystemByHandle(HANDLE systemHandle);
HANDLE EXPORT AlazarGetBoardBySystemID(U32 systemId, U32 boardId);
HANDLE EXPORT AlazarGetBoardBySystemHandle(HANDLE systemHandle, U32 boardId);
RETURN_CODE EXPORT AlazarSetLED(HANDLE handle, U32 state);
RETURN_CODE EXPORT AlazarQueryCapability(HANDLE handle, U32 capability, U32 reserved, U32 *retValue);
RETURN_CODE EXPORT AlazarQueryCapabilityLL(HANDLE handle, U32 capability, U32 reserved, S64 *retValue);
U32 EXPORT AlazarMaxSglTransfer(ALAZAR_BOARDTYPES bt);
RETURN_CODE EXPORT AlazarGetMaxRecordsCapable(HANDLE handle, U32 samplesPerRecord, U32 *maxRecordsPerCapture);
U32 EXPORT AlazarGetWhoTriggeredBySystemHandle(HANDLE systemHandle, U32 boardId, U32 recordNumber);
U32 EXPORT AlazarGetWhoTriggeredBySystemID(U32 systemId, U32 boardId, U32 recordNumber);
RETURN_CODE EXPORT AlazarSetBWLimit(HANDLE handle, U32 channel, U32 enable);
RETURN_CODE EXPORT AlazarSleepDevice(HANDLE handle, U32 sleepState);
RETURN_CODE EXPORT AlazarBeforeAsyncRead(HANDLE handle, U32 channelSelect, long transferOffset, U32 transferLength, U32 recordsPerBuffer, U32 recordsPerAcquisition, U32 flags);
RETURN_CODE EXPORT AlazarAbortAsyncRead(HANDLE handle);
RETURN_CODE EXPORT AlazarPostAsyncBuffer(HANDLE handle, void *buffer, U32 bufferLength_bytes);
RETURN_CODE EXPORT AlazarWaitAsyncBufferComplete(HANDLE handle, void *buffer, U32 timeout_ms);
RETURN_CODE EXPORT AlazarWaitNextAsyncBufferComplete(HANDLE handle, void *buffer, U32 bytesToCopy, U32 timeout_ms);
RETURN_CODE EXPORT AlazarCreateStreamFile(HANDLE handle, const char *filePath);
RETURN_CODE EXPORT AlazarResetTimeStamp(HANDLE handle, U32 option);
RETURN_CODE EXPORT AlazarReadRegister(HANDLE handle, U32 offset, U32 *retVal, U32 pswrd);
RETURN_CODE EXPORT AlazarWriteRegister(HANDLE handle, U32 offset, U32 Val,U32 pswrd);
RETURN_CODE EXPORT ReadC(HANDLE handle, U8 *DmaBuffer, U32 SizeToRead, U32 LocalAddress);
void EXPORT WriteC(HANDLE handle, U8 *DmaBuffer, U32 SizeToRead, U32 LocalAddress);
RETURN_CODE EXPORT AlazarGetTriggerAddressA(HANDLE handle, U32 Record, U32 *TriggerAddress, U32 *TimeStampHighPart, U32 *TimeStampLowPart);
RETURN_CODE EXPORT AlazarGetTriggerAddressB(HANDLE handle, U32 Record, U32 *TriggerAddress, U32 *TimeStampHighPart, U32 *TimeStampLowPart);
RETURN_CODE EXPORT ATS9462FlashSectorPageRead(HANDLE handle, U32 address, U16 *PageBuff);
RETURN_CODE EXPORT ATS9462PageWriteToFlash(HANDLE handle, U32 address, U16 *PageBuff);
RETURN_CODE EXPORT ATS9462FlashSectorErase(HANDLE handle, int sectorNum);
RETURN_CODE EXPORT ATS9462FlashChipErase(HANDLE h);
RETURN_CODE EXPORT SetControlCommand(HANDLE handle, int cmd);
RETURN_CODE EXPORT AlazarDACSetting(HANDLE handle, U32 SetGet, U32 OriginalOrModified, U8 Channel, U32 DACNAME, U32 Coupling, U32 InputRange, U32 Impedance, U32 *getVal, U32 setVal, U32 *error);
RETURN_CODE EXPORT AlazarWrite(HANDLE handle, void *buffer, long bufLen, int DmaChannel, U32 firstPoint, U32 startAddress, U32 endAddress, BOOL waitTillEnd, U32 *error);
RETURN_CODE EXPORT AlazarConfigureAuxIO(HANDLE handle, U32 mode, U32 parameter);
const char EXPORT *AlazarErrorToText(RETURN_CODE retCode);
RETURN_CODE EXPORT AlazarConfigureSampleSkipping(HANDLE handle, U32 mode, U32 sampleClocksPerRecord, U16 *sampleSkipBitmap);
RETURN_CODE EXPORT AlazarCoprocessorRegisterRead(HANDLE handle, U32 offset, U32 *value);
RETURN_CODE EXPORT AlazarCoprocessorRegisterWrite(HANDLE handle, U32 offset, U32 value);
RETURN_CODE EXPORT AlazarCoprocessorDownloadA(HANDLE handle, char *fileName, U32 options);
RETURN_CODE EXPORT AlazarCoprocessorDownloadBuffer(HANDLE handle, U8 *pbBuffer, U32 uBytesToWrite, U32 options);
RETURN_CODE EXPORT AlazarConfigureRecordAverage(HANDLE handle, U32 mode, U32 samplesPerRecord, U32 recordsPerAverage, U32 options);
U8 EXPORT *AlazarAllocBufferU8(HANDLE handle, U32 sampleCount);
RETURN_CODE EXPORT AlazarFreeBufferU8(HANDLE handle, U8 *buffer);
U16 EXPORT *AlazarAllocBufferU16(HANDLE handle, U32 sampleCount);
RETURN_CODE EXPORT AlazarFreeBufferU16(HANDLE handle, U16 *buffer);
U8 EXPORT *AlazarAllocBufferU8Ex(HANDLE handle, U64 sampleCount);
RETURN_CODE EXPORT AlazarFreeBufferU8Ex(HANDLE handle, U8 *buffer);
U16 EXPORT *AlazarAllocBufferU16Ex(HANDLE handle, U64 sampleCount);
RETURN_CODE EXPORT AlazarFreeBufferU16Ex(HANDLE handle, U16 *buffer);
RETURN_CODE EXPORT AlazarConfigureLSB(HANDLE handle, U32 valueLsb0, U32 valueLsb1);
RETURN_CODE EXPORT AlazarExtractFFTNPTFooters(void *buffer, U32 recordSize_bytes, U32 bufferSize_bytes, NPTFooter *footersArray, U32 numFootersToExtract);
RETURN_CODE EXPORT AlazarExtractTimeDomainNPTFooters(void *buffer, U32 recordSize_bytes, U32 bufferSize_bytes, NPTFooter *footersArray, U32 numFootersToExtract);
RETURN_CODE EXPORT AlazarExtractNPTFooters(void *buffer, U32 recordSize_bytes, U32 bufferSize_bytes, NPTFooter *footersArray, U32 numFootersToExtract);
RETURN_CODE EXPORT AlazarDisableDSP(HANDLE boardHandle);
RETURN_CODE EXPORT AlazarOCTIgnoreBadClock(HANDLE handle, U32 enable, double goodClockDuration_seconds, double badClockDuration_seconds, double *triggerCycleTime_seconds, double *triggerPulseWidth_seconds);
RETURN_CODE EXPORT AlazarSetADCBackgroundCompensation(HANDLE handle, BOOL active);
RETURN_CODE EXPORT AlazarDSPGetModules(HANDLE boardHandle, U32 numEntries, dsp_module_handle *modules, U32 *numModules);
RETURN_CODE EXPORT AlazarDSPGetInfo(dsp_module_handle dspHandle, U32 *dspModuleId, U16 *versionMajor, U16 *versionMinor, U32 *maxLength, U32 *reserved0, U32 *reserved1);
RETURN_CODE EXPORT AlazarDSPGenerateWindowFunction(U32 windowType, float *window, U32 windowLength_samples, U32 paddingLength_samples);
RETURN_CODE EXPORT AlazarFFTGetMaxTriggerRepeatRate( dsp_module_handle dspHandle, U32 fftSize, double *maxTriggerRepeatRate);
RETURN_CODE EXPORT AlazarFFTBackgroundSubtractionSetRecordS16( dsp_module_handle dspHandle, const S16 *record, U32 size_samples);
RETURN_CODE EXPORT AlazarFFTBackgroundSubtractionGetRecordS16( dsp_module_handle dspHandle, S16 *backgroundRecord, U32 size_samples);
RETURN_CODE EXPORT AlazarFFTBackgroundSubtractionSetEnabled( dsp_module_handle dspHandle, BOOL enabled);
RETURN_CODE EXPORT AlazarFFTSetWindowFunction(dsp_module_handle dspHandle, U32 samplesPerRecord, float *realWindowArray, float *imagWindowArray);
RETURN_CODE EXPORT AlazarFFTGetWindowFunction(dsp_module_handle dspHandle, U32 samplesPerRecord, float *realWindowArray, float *imagWindowArray);
RETURN_CODE EXPORT AlazarFFTVerificationMode(dsp_module_handle dspHandle, BOOL enable, S16 *realArray, S16 *imagArray, size_t recordLength_samples);
RETURN_CODE EXPORT AlazarFFTSetup(dsp_module_handle dspHandle, U16 inputChannelMask, U32 recordLength_samples, U32 fftLength_samples, U32 outputFormat, U32 footer, U32 reserved, U32 *bytesPerOutputRecord);
RETURN_CODE EXPORT AlazarFFTSetScalingAndSlicing(dsp_module_handle dspHandle, U8 slice_pos, float loge_ampl_mult);
RETURN_CODE EXPORT AlazarDSPGetBuffer(HANDLE boardHandle, void *buffer, U32 timeout_ms);
RETURN_CODE EXPORT AlazarDSPGetNextBuffer(HANDLE boardHandle, void *buffer, U32 bytesToCopy, U32 timeout_ms);
RETURN_CODE EXPORT AlazarDSPGetParameterU32(dsp_module_handle dspHandle, U32 parameter, U32 *_result);
RETURN_CODE EXPORT AlazarDSPSetParameterU32(dsp_module_handle dspHandle, U32 parameter, U32 value);
RETURN_CODE EXPORT AlazarDSPGetParameterS32(dsp_module_handle dspHandle, U32 parameter, S32 *_result);
RETURN_CODE EXPORT AlazarDSPSetParameterS32(dsp_module_handle dspHandle, U32 parameter, S32 value);
RETURN_CODE EXPORT AlazarDSPGetParameterFloat(dsp_module_handle dspHandle, U32 parameter, float *_result);
RETURN_CODE EXPORT AlazarDSPSetParameterFloat(dsp_module_handle dspHandle, U32 parameter, float value);
RETURN_CODE EXPORT AlazarDSPConfigureSelfTrigger(dsp_module_handle dspHandle, BOOL enable, U32 counter);
RETURN_CODE EXPORT AlazarDSPConfigureSampleSkipping(dsp_module_handle dspHandle, BOOL independentMode, U32 count, U16 *vector);
RETURN_CODE EXPORT AlazarDSPAbortCapture(HANDLE boardHandle);